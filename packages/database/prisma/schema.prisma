// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
  // referentialIntegrity = "prisma"
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["referentialIntegrity"]
}

model Event {
  id         String   @id
  name       String
  date       DateTime
  location   String
  race       String
  setter     String
  management String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  teams      Team[]
}

model Team {
  id          String   @id @default(cuid())
  fullname    String   @unique
  shortname   String
  eventId     String
  orderMale   Int      @unique
  orderFemale Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  event       Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  racers      Racer[]
}

model Racer {
  id           String   @id @default(cuid())
  name         String
  kana         String
  category     String // ski, snowboard
  bib          Int?     @unique
  gender       String // f, m
  seed         Int
  teamId       String?
  special      String // normal, senior, junior
  isFirstTime  Boolean
  age          Int?
  status1      String? // ds, dq, df
  time1        Int?
  status2      String? // ds, dq, df
  time2        Int?
  bestTime     Int?
  point        Int      @default(0)
  totalOrder   Int?
  specialPoint Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  team         Team?    @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model Point {
  id                   Int      @id
  pointSkiMale         Int
  pointSkiFemale       Int
  pointSnowboardMale   Int
  pointSnowboardFemale Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model SpecialPoint {
  id        String   @id
  point     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
